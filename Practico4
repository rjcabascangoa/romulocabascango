using System;
using System.Collections.Generic;

class Grafo
{
    private Dictionary<int, List<int>> adjList;

    public Grafo()
    {
        adjList = new Dictionary<int, List<int>>();
    }

    public void AgregarVertice(int vertice)
    {
        if (!adjList.ContainsKey(vertice))
        {
            adjList[vertice] = new List<int>();
        }
    }

    public void AgregarArista(int v1, int v2)
    {
        // Aseguramos que ambos vértices existan en el grafo
        if (!adjList.ContainsKey(v1)) AgregarVertice(v1);
        if (!adjList.ContainsKey(v2)) AgregarVertice(v2);

        // Añadir las conexiones entre los vértices
        adjList[v1].Add(v2);
        adjList[v2].Add(v1); // Para grafo no dirigido
    }

    public void CalcularCentralidadGrado()
    {
        Console.WriteLine("Centralidad de Grado:");
        foreach (var nodo in adjList)
        {
            Console.WriteLine($"Nodo {nodo.Key}: {nodo.Value.Count} conexiones");
        }
    }
}

class Program
{
    static void Main()
    {
        Grafo grafo = new Grafo();
        grafo.AgregarVertice(1);
        grafo.AgregarVertice(2);
        grafo.AgregarVertice(3);
        grafo.AgregarVertice(4);

        grafo.AgregarArista(1, 2);
        grafo.AgregarArista(1, 3);
        grafo.AgregarArista(2, 4);

        grafo.CalcularCentralidadGrado();
    }
}
