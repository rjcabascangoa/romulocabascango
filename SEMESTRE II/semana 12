class Libro:
    def __init__(self, titulo, autor, categoria, isbn):
        # Atributos inmutables
        self.titulo = titulo
        self.autor = autor  # Tupla para autor (nombre completo, etc.)
        self.categoria = categoria
        self.isbn = isbn
    
    def __str__(self):
        return f"'{self.titulo}' por {self.autor} - {self.categoria} (ISBN: {self.isbn})"


class Usuario:
    def __init__(self, nombre, id_usuario):
        self.nombre = nombre
        self.id_usuario = id_usuario
        self.libros_prestados = []  # Lista para los libros actualmente prestados
    
    def __str__(self):
        return f"Usuario: {self.nombre} (ID: {self.id_usuario})"
    
    def prestar_libro(self, libro):
        if libro not in self.libros_prestados:
            self.libros_prestados.append(libro)
    
    def devolver_libro(self, libro):
        if libro in self.libros_prestados:
            self.libros_prestados.remove(libro)
    
    def listar_libros_prestados(self):
        return [str(libro) for libro in self.libros_prestados]


class Biblioteca:
    def __init__(self):
        self.libros = {}  # Diccionario para almacenar libros (ISBN como clave)
        self.usuarios = {}  # Diccionario para almacenar usuarios (ID de usuario como clave)
        self.ids_usuarios = set()  # Conjunto para asegurar IDs de usuario únicos
    
    def añadir_libro(self, libro):
        if libro.isbn not in self.libros:
            self.libros[libro.isbn] = libro
    
    def quitar_libro(self, isbn):
        if isbn in self.libros:
            del self.libros[isbn]
    
    def registrar_usuario(self, nombre, id_usuario):
        if id_usuario not in self.ids_usuarios:
            nuevo_usuario = Usuario(nombre, id_usuario)
            self.usuarios[id_usuario] = nuevo_usuario
            self.ids_usuarios.add(id_usuario)
    
    def dar_baja_usuario(self, id_usuario):
        if id_usuario in self.usuarios:
            del self.usuarios[id_usuario]
            self.ids_usuarios.remove(id_usuario)
    
    def prestar_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios and isbn in self.libros:
            usuario = self.usuarios[id_usuario]
            libro = self.libros[isbn]
            usuario.prestar_libro(libro)
            self.quitar_libro(isbn)
    
    def devolver_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios and isbn not in self.libros:
            usuario = self.usuarios[id_usuario]
            libro = next((libro for libro in usuario.libros_prestados if libro.isbn == isbn), None)
            if libro:
                usuario.devolver_libro(libro)
                self.añadir_libro(libro)
    
    def buscar_libro(self, criterio, valor):
        resultados = []
        for libro in self.libros.values():
            if (criterio == "titulo" and valor.lower() in libro.titulo.lower()) or \
               (criterio == "autor" and valor.lower() in libro.autor.lower()) or \
               (criterio == "categoria" and valor.lower() in libro.categoria.lower()):
                resultados.append(libro)
        return resultados
    
    def listar_libros_prestados(self, id_usuario):
        if id_usuario in self.usuarios:
            usuario = self.usuarios[id_usuario]
            return usuario.listar_libros_prestados()
        return []


# Pruebas del sistema
biblioteca = Biblioteca()

# Crear libros
libro1 = Libro("Cien años de soledad", "Gabriel García Márquez", "Ficción", "1234567890")
libro2 = Libro("El otoño del patriarca", "Gabriel García Márquez", "Ficción", "0987654321")

# Añadir libros a la biblioteca
biblioteca.añadir_libro(libro1)
biblioteca.añadir_libro(libro2)

# Registrar usuarios
biblioteca.registrar_usuario("Juan Pérez", "u001")
biblioteca.registrar_usuario("Ana Gómez", "u002")

# Prestar libro
biblioteca.prestar_libro("u001", "1234567890")

# Listar libros prestados
print(biblioteca.listar_libros_prestados("u001"))

# Devolver libro
biblioteca.devolver_libro("u001", "1234567890")

# Buscar libro
resultados = biblioteca.buscar_libro("autor", "Gabriel García Márquez")
for libro in resultados:
    print(libro)
