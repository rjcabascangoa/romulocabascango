import tkinter as tk
from tkinter import ttk, messagebox
from tkcalendar import DateEntry
import datetime


# Función para agregar eventos
def agregar_evento():
    fecha = date_entry.get()
    hora = hora_entry.get()
    descripcion = descripcion_entry.get()

    if fecha and hora and descripcion:
        tree.insert("", "end", values=(fecha, hora, descripcion))
        limpiar_campos()
    else:
        messagebox.showwarning("Advertencia", "Por favor, complete todos los campos")


# Función para eliminar evento seleccionado
def eliminar_evento():
    selected_item = tree.selection()
    if selected_item:
        respuesta = messagebox.askyesno("Confirmación", "¿Estás seguro de eliminar el evento?")
        if respuesta:
            tree.delete(selected_item)
    else:
        messagebox.showwarning("Advertencia", "Por favor, seleccione un texto para eliminar",fg="blue")


# Limpiar campos de entrada
def limpiar_campos():
    hora_entry.delete(0, tk.END)
    descripcion_entry.delete(0, tk.END)


# Crear ventana principal
root = tk.Tk()
root.title("Diario Personal")
root.geometry("600x400")
root.config(cursor="pirate")

# Crear un frame para los campos de entrada
frame_entrada = tk.Frame(root)
frame_entrada.pack(pady=10)

# Etiquetas y campos de entrada

tk.Label(frame_entrada, text="Fecha",fg="red").grid(row=1, column=0, padx=5, pady=5)
tk.Label(frame_entrada, text="ROMULO CABASCANGO",fg="red").grid(row=0, column=0, padx=5, pady=5)
tk.Label(frame_entrada, text="NIVEL 2 ",fg="blue").grid(row=6, column=0, padx=5, pady=5)
tk.Label(frame_entrada, text="CARRERA TÉCNOLOGIAS DE LA INFORMACIÓN ",fg="green").grid(row=7, column=0, padx=5, pady=5)
date_entry = DateEntry(frame_entrada, width=12, background='darkblue', foreground='white', borderwidth=2)
date_entry.grid(row=0, column=1, padx=5, pady=5)
tk.Label(frame_entrada, text="Hora",fg="blue").grid(row=1, column=0, padx=5, pady=5)
hora_entry = tk.Entry(frame_entrada)
hora_entry.grid(row=1, column=1, padx=5, pady=5)


tk.Label(frame_entrada, text="Descripción",fg="green",font=("Comic Sans MS",18)).grid(row=2, column=0, padx=5, pady=5)
descripcion_entry = tk.Entry(frame_entrada, width=40)
descripcion_entry.grid(row=2, column=1, padx=5, pady=5)

# Crear frame para los botones
frame_botones = tk.Frame(root)
frame_botones.pack(pady=10)

# Botones de acción
agregar_button = tk.Button(frame_botones, text="Agregar Texto",fg="blue", command=agregar_evento)
agregar_button.grid(row=0, column=0, padx=10)

eliminar_button = tk.Button(frame_botones, text="Eliminar Texto",fg="red", command=eliminar_evento)
eliminar_button.grid(row=0, column=1, padx=10)

salir_button = tk.Button(frame_botones, text="Cerrar",fg="green", command=root.quit)
salir_button.grid(row=0, column=2, padx=10)

# Crear frame para la lista de eventos
frame_lista = tk.Frame(root)
frame_lista.pack(pady=10)

# Crear Treeview para mostrar los eventos
tree = ttk.Treeview(frame_lista, columns=("Fecha", "Hora", "Descripción"), show="headings")
tree.heading("Fecha", text="Fecha")
tree.heading("Hora", text="Hora")
tree.heading("Descripción", text="Descripción")
tree.pack()

# Iniciar el bucle principal de la aplicación
root.mainloop()
