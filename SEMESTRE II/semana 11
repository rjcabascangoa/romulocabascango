import os
import json

class Producto:
    def __init__(self, id, nombre, cantidad, precio):
        self.id = id
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def obtener_id(self):
        return self.id

    def obtener_nombre(self):
        return self.nombre

    def obtener_cantidad(self):
        return self.cantidad

    def obtener_precio(self):
        return self.precio

    def actualizar_cantidad(self, nueva_cantidad):
        self.cantidad = nueva_cantidad

    def actualizar_precio(self, nuevo_precio):
        self.precio = nuevo_precio

class Inventario:
    def __init__(self):
        self.productos = {}

    def agregar_producto(self, producto):
        self.productos[producto.obtener_id()] = producto

    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
        else:
            print(f"No se encontró el producto con ID {id_producto}")

    def actualizar_producto(self, id_producto, nueva_cantidad=None, nuevo_precio=None):
        if id_producto in self.productos:
            producto = self.productos[id_producto]
            if nueva_cantidad is not None:
                producto.actualizar_cantidad(nueva_cantidad)
            if nuevo_precio is not None:
                producto.actualizar_precio(nuevo_precio)
        else:
            print(f"No se encontró el producto con ID {id_producto}")

    def buscar_producto(self, nombre_producto):
        for producto in self.productos.values():
            if producto.obtener_nombre().lower() == nombre_producto.lower():
                return producto
        return None

    def mostrar_productos(self):
        for producto in self.productos.values():
            print(f"ID: {producto.obtener_id()}, Nombre: {producto.obtener_nombre()}, "
                  f"Cantidad: {producto.obtener_cantidad()}, Precio: {producto.obtener_precio()}")

    def guardar_inventario(self, archivo):
        datos_inventario = {producto.obtener_id(): {
            "nombre": producto.obtener_nombre(),
            "cantidad": producto.obtener_cantidad(),
            "precio": producto.obtener_precio()
        } for producto in self.productos.values()}

        with open(archivo, "w") as f:
            json.dump(datos_inventario, f)

    def cargar_inventario(self, archivo):
        try:
            with open(archivo, "r") as f:
                datos_inventario = json.load(f)

            self.productos = {
                id_producto: Producto(id_producto, datos["nombre"], datos["cantidad"], datos["precio"])
                for id_producto, datos in datos_inventario.items()
            }
        except FileNotFoundError:
            print(f"No se encontró el archivo {archivo}")

def menu_principal():
    inventario = Inventario()
    while True:
        print("\nMenú de Gestión de Inventario:")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto")
        print("5. Mostrar todos los productos")
        print("6. Guardar inventario")
        print("7. Cargar inventario")
        print("8. Salir")

        opcion = input("Seleccione una opción (1-8): ")

        if opcion == "1":
            id_producto = input("Ingrese el ID del producto: ")
            nombre_producto = input("Ingrese el nombre del producto: ")
            cantidad_producto = int(input("Ingrese la cantidad del producto: "))
            precio_producto = float(input("Ingrese el precio del producto: "))
            producto = Producto(id_producto, nombre_producto, cantidad_producto, precio_producto)
            inventario.agregar_producto(producto)
            print("Producto agregado exitosamente.")

        elif opcion == "2":
            id_producto = input("Ingrese el ID del producto a eliminar: ")
            inventario.eliminar_producto(id_producto)

        elif opcion == "3":
            id_producto = input("Ingrese el ID del producto a actualizar: ")
            nueva_cantidad = input("Ingrese la nueva cantidad (presione Enter para dejar sin cambios): ")
            nuevo_precio = input("Ingrese el nuevo precio (presione Enter para dejar sin cambios): ")
            if nueva_cantidad:
                nueva_cantidad = int(nueva_cantidad)
            else:
                nueva_cantidad = None
            if nuevo_precio:
                nuevo_precio = float(nuevo_precio)
            else:
                nuevo_precio = None
            inventario.actualizar_producto(id_producto, nueva_cantidad, nuevo_precio)

        elif opcion == "4":
            nombre_producto = input("Ingrese el nombre del producto a buscar: ")
            producto = inventario.buscar_producto(nombre_producto)
            if producto:
                print(f"ID: {producto.obtener_id()}, Nombre: {producto.obtener_nombre()}, "
                      f"Cantidad: {producto.obtener_cantidad()}, Precio: {producto.obtener_precio()}")
            else:
                print(f"No se encontró el producto '{nombre_producto}'")

        elif opcion == "5":
            inventario.mostrar_productos()

        elif opcion == "6":
            archivo = input("Ingrese el nombre del archivo para guardar el inventario: ")
            inventario.guardar_inventario(archivo)
            print("Inventario guardado exitosamente.")

        elif opcion == "7":
            archivo = input("Ingrese el nombre del archivo para cargar el inventario: ")
            inventario.cargar_inventario(archivo)
            print("Inventario cargado exitosamente.")

        elif opcion == "8":
            print("Saliendo del programa...")
            break

        else:
            print("Opción inválida. Intente de nuevo.")

if __name__ == "__main__":
    menu_principal()
